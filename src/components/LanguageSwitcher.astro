---
import { Icon } from "astro-icon/components";
import { getLanguageNames } from "@utils/localeUtils";

const currentLocale = Astro.currentLocale ?? "en";
const currentPath = Astro.url.pathname;
let localeUrls: Record<string, string> = {};

const supportedLanguages = ["zh", "en"];

function replaceLocaleInPath(path: string, newLocale: string): string {
  const parts = path.split("/").filter(Boolean);
  if (supportedLanguages.includes(parts[0])) {
    parts[0] = newLocale;
  } else {
    parts.unshift(newLocale);
  }
  const newPath = "/" + parts.join("/") + "/";
  return newPath.replace(/\/+$/, "/");
}

supportedLanguages.forEach((locale) => {
  const newPath = replaceLocaleInPath(currentPath, locale);
  localeUrls[locale] = newPath;
});

localeUrls[currentLocale] = currentPath;
const languageNames = getLanguageNames();
---

<div class="hs-dropdown relative inline-flex [--placement:top-left]">
  <button
    id="footer-language-dropdown"
    type="button"
    class="hs-dropdown-toggle inline-flex items-center rounded-full px-3 py-2 text-sm font-medium text-black hover:bg-neutral-100 disabled:pointer-events-none disabled:opacity-50 dark:text-white dark:hover:bg-white/10 transition-colors"
    aria-label="Language"
  >
    <Icon name="tabler:world" class="icon-base" />
  </button>
  <div
    class="hs-dropdown-menu z-10 hidden w-40 rounded-lg bg-white p-2 shadow-md opacity-0 transition-[opacity,margin] hs-dropdown-open:opacity-100 dark:divide-neutral-700 dark:border dark:border-neutral-700 dark:bg-neutral-800"
    aria-labelledby="footer-language-dropdown"
  >
    {
      supportedLanguages.map((locale) =>
        locale !== currentLocale && (
          <a
            class="flex items-center gap-x-2 rounded-lg px-3 py-2 text-sm text-neutral-600 hover:text-neutral-800 focus:outline-none dark:text-neutral-400 dark:hover:text-neutral-200 transition-colors"
            href={localeUrls[locale]}
          >
            {languageNames[locale]}
          </a>
        ),
      )
    }
  </div>
</div>
